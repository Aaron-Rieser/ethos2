MUST DO : 
Auth on chrome and other devices not working / posting on safari works now tho
Delay on getting some posts up - posted, in database, but take a few to get online 
Auth on incognito 
Login bar as sticky top nav with some other useful info or naw
User stories and product mgmt focus 
Auth user design of this and how it impacts posts
New sign up page 
Intro page description  / sell for new sign ups 
Center posts and fix all post look + feel 
- add a few other posts types
Update all buttons and nav 
Detect location and send to right feed as an intro task - try again
Timeline. 75 days of 2025 til' launch or baunch 
Add a news and one final rss feed
map funcionality, full geo json file
Change post design and account for more styles
- including Toronto, London, Hamilton and Kingston to start, guelph?
I- compression for large or near limit photos
I- Speed 
I- how how to handle image validation?
I- Show how to handle image resizing
.ENV backups for local dev testing
Add ads 
Login
Geolocation api implementation to help reduce requests for location permission
architecture costing - before all design
Proper branding name, theme, logo
DESIGN SPRINT!
Wilbur
Add payment function for service
launch
Pitch

RSS feeds
- bandsintown paid tier, dice.fm partnership, exclaim! Magazine
- libraries 



RELEASE NOTES: 
Auth won't allow posting 


Authentication problems - moving between pages, etc - auth must remain between pages in the same app
Login is now LIVE! Via Auth0, it only works on 1 page at a time lol. It's a start.
Images are now LIVE!! Via Cloudinary, 25k images a month. Bit slow though, maybe look at AWS long term?
- added loading state and error msg for over limit posts
Gps now added to posts - location coordinates added 
Footer fixed on all pages 
Change homepage logic. 
- index must move to feed then
Updated some buttons and nav


CORE NOTES: NOV 30 and before

ethos2 is functional !! YAS !

database = postgresql://postgres:vKXvcmZdIzhIqGRxdOLWTvAXCeZyagJl@junction.proxy.rlwy.net:50368/railway
using DATABASE_PUBLIC_URL varialbe - 
- pull from postgres database
- then CALL it in the code tab
- and MAKE SURE the code itself actually uses it

Then using the db.js format and other js formats
Loading all the pacakge json's into the repo with the right repo creation

Look over all code, back it up, and look over all Ai assistants

This is the base to start off

NEXT: Create an OUTPUT PAGE
!!! 

THEN: ALl styling and launch

Note - handling SSL locally to database vs railway, modify db.js.. not now but in the future.